// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Line3D
{
    float3 localposition[2];
    float4 transformedposition[2];
};

struct Line2D
{
    float3 point2d[2];
};


cbuffer Constants
{
    uint HideOccludedEdge;
};

StructuredBuffer<Line3D> Input3DLines;
AppendStructuredBuffer<Line2D> Output2DLines;

uniform float4 ZbufferParam;
uniform float RenderResolutionX;
uniform float RenderResolutionY;


[numthreads(1, 1, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    Line3D InputLine = Input3DLines[id.x];
    Line2D OutputLine;
    OutputLine.point2d[0] = InputLine.localposition[0];
    OutputLine.point2d[1] = InputLine.localposition[1];
    Output2DLines.Append(OutputLine);


}
