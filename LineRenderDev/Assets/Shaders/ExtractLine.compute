// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct AdjFace
{
    uint x;
    uint y;
    uint z;
    uint xy;
    uint yz;
    uint zx;
};


StructuredBuffer<float3> Vertices;
StructuredBuffer<AdjFace> AdjacencyTriangles;

AppendStructuredBuffer<uint2> LineIndices;

uniform uint TotalAdjacencyTrianglesNum;


[numthreads(256, 1, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    
    if (id.x >= TotalAdjacencyTrianglesNum) return;

    AdjFace CurrentFace = AdjacencyTriangles[id.x];
    uint2 xy = uint2(CurrentFace.x, CurrentFace.y);
    uint2 yz = uint2(CurrentFace.y, CurrentFace.z);
    uint2 zx = uint2(CurrentFace.z, CurrentFace.x);

    float3 vertex_x = Vertices[CurrentFace.x];
    float3 vertex_y = Vertices[CurrentFace.y];
    float3 vertex_z = Vertices[CurrentFace.z];


    LineIndices.Append(xy);
    LineIndices.Append(yz);
    LineIndices.Append(zx);

}
